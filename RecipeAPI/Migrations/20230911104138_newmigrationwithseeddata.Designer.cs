// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeAPI;

#nullable disable

namespace RecipeAPI.Migrations
{
    [DbContext(typeof(RecipeContext))]
    [Migration("20230911104138_newmigrationwithseeddata")]
    partial class newmigrationwithseeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RecipeAPI.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Spaghetti pasta",
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fresh eggs",
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Smoked bacon strips",
                            Name = "Bacon"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Grated Parmesan cheese",
                            Name = "Parmesan Cheese"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Boneless chicken breast",
                            Name = "Chicken"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Heavy cream for sauce",
                            Name = "Heavy Cream"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Fresh broccoli florets",
                            Name = "Broccoli"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Sliced carrots",
                            Name = "Carrots"
                        });
                });

            modelBuilder.Entity("RecipeAPI.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Classic Italian pasta dish",
                            Name = "Spaghetti Carbonara"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Creamy chicken pasta",
                            Name = "Chicken Alfredo"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Healthy vegetable stir-fry",
                            Name = "Vegetable Stir-Fry"
                        });
                });

            modelBuilder.Entity("RecipeAPI.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1,
                            Id = 0,
                            Quantity = 200m,
                            UnitOfMeasurement = "grams"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 2,
                            Id = 0,
                            Quantity = 2m,
                            UnitOfMeasurement = "large"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 3,
                            Id = 0,
                            Quantity = 100m,
                            UnitOfMeasurement = "grams"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 4,
                            Id = 0,
                            Quantity = 50m,
                            UnitOfMeasurement = "grams"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 5,
                            Id = 0,
                            Quantity = 400m,
                            UnitOfMeasurement = "grams"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 6,
                            Id = 0,
                            Quantity = 250m,
                            UnitOfMeasurement = "ml"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 7,
                            Id = 0,
                            Quantity = 150m,
                            UnitOfMeasurement = "grams"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 4,
                            Id = 0,
                            Quantity = 30m,
                            UnitOfMeasurement = "grams"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 7,
                            Id = 0,
                            Quantity = 200m,
                            UnitOfMeasurement = "grams"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 8,
                            Id = 0,
                            Quantity = 150m,
                            UnitOfMeasurement = "grams"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 6,
                            Id = 0,
                            Quantity = 100m,
                            UnitOfMeasurement = "ml"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 5,
                            Id = 0,
                            Quantity = 300m,
                            UnitOfMeasurement = "grams"
                        });
                });

            modelBuilder.Entity("RecipeAPI.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("RecipeAPI.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeAPI.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeAPI.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("RecipeAPI.Entities.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
